// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Lxd
{
    [LxdResourceType("lxd:index/publishImage:PublishImage")]
    public partial class PublishImage : global::Pulumi.CustomResource
    {
        [Output("aliases")]
        public Output<ImmutableArray<string>> Aliases { get; private set; } = null!;

        [Output("architecture")]
        public Output<string> Architecture { get; private set; } = null!;

        [Output("compressionAlgorithm")]
        public Output<string?> CompressionAlgorithm { get; private set; } = null!;

        [Output("container")]
        public Output<string> Container { get; private set; } = null!;

        [Output("createdAt")]
        public Output<int> CreatedAt { get; private set; } = null!;

        [Output("filename")]
        public Output<string?> Filename { get; private set; } = null!;

        [Output("fingerprint")]
        public Output<string> Fingerprint { get; private set; } = null!;

        [Output("project")]
        public Output<string?> Project { get; private set; } = null!;

        [Output("properties")]
        public Output<ImmutableDictionary<string, object>?> Properties { get; private set; } = null!;

        [Output("public")]
        public Output<bool?> Public { get; private set; } = null!;

        /// <summary>
        /// A map of arbitrary strings that, when changed, will force the resource to be replaced.
        /// </summary>
        [Output("triggers")]
        public Output<ImmutableDictionary<string, object>?> Triggers { get; private set; } = null!;


        /// <summary>
        /// Create a PublishImage resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PublishImage(string name, PublishImageArgs args, CustomResourceOptions? options = null)
            : base("lxd:index/publishImage:PublishImage", name, args ?? new PublishImageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PublishImage(string name, Input<string> id, PublishImageState? state = null, CustomResourceOptions? options = null)
            : base("lxd:index/publishImage:PublishImage", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/aleshkashell/pulumi-lxd/releases/download/v0.0.1/pulumi-resource-lxd",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PublishImage resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PublishImage Get(string name, Input<string> id, PublishImageState? state = null, CustomResourceOptions? options = null)
        {
            return new PublishImage(name, id, state, options);
        }
    }

    public sealed class PublishImageArgs : global::Pulumi.ResourceArgs
    {
        [Input("aliases")]
        private InputList<string>? _aliases;
        public InputList<string> Aliases
        {
            get => _aliases ?? (_aliases = new InputList<string>());
            set => _aliases = value;
        }

        [Input("compressionAlgorithm")]
        public Input<string>? CompressionAlgorithm { get; set; }

        [Input("container", required: true)]
        public Input<string> Container { get; set; } = null!;

        [Input("filename")]
        public Input<string>? Filename { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("properties")]
        private InputMap<object>? _properties;
        public InputMap<object> Properties
        {
            get => _properties ?? (_properties = new InputMap<object>());
            set => _properties = value;
        }

        [Input("public")]
        public Input<bool>? Public { get; set; }

        [Input("triggers")]
        private InputMap<object>? _triggers;

        /// <summary>
        /// A map of arbitrary strings that, when changed, will force the resource to be replaced.
        /// </summary>
        public InputMap<object> Triggers
        {
            get => _triggers ?? (_triggers = new InputMap<object>());
            set => _triggers = value;
        }

        public PublishImageArgs()
        {
        }
        public static new PublishImageArgs Empty => new PublishImageArgs();
    }

    public sealed class PublishImageState : global::Pulumi.ResourceArgs
    {
        [Input("aliases")]
        private InputList<string>? _aliases;
        public InputList<string> Aliases
        {
            get => _aliases ?? (_aliases = new InputList<string>());
            set => _aliases = value;
        }

        [Input("architecture")]
        public Input<string>? Architecture { get; set; }

        [Input("compressionAlgorithm")]
        public Input<string>? CompressionAlgorithm { get; set; }

        [Input("container")]
        public Input<string>? Container { get; set; }

        [Input("createdAt")]
        public Input<int>? CreatedAt { get; set; }

        [Input("filename")]
        public Input<string>? Filename { get; set; }

        [Input("fingerprint")]
        public Input<string>? Fingerprint { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("properties")]
        private InputMap<object>? _properties;
        public InputMap<object> Properties
        {
            get => _properties ?? (_properties = new InputMap<object>());
            set => _properties = value;
        }

        [Input("public")]
        public Input<bool>? Public { get; set; }

        [Input("triggers")]
        private InputMap<object>? _triggers;

        /// <summary>
        /// A map of arbitrary strings that, when changed, will force the resource to be replaced.
        /// </summary>
        public InputMap<object> Triggers
        {
            get => _triggers ?? (_triggers = new InputMap<object>());
            set => _triggers = value;
        }

        public PublishImageState()
        {
        }
        public static new PublishImageState Empty => new PublishImageState();
    }
}
