// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("lxd");

/**
 * Accept the server certificate
 */
export declare const acceptRemoteCertificate: boolean | undefined;
Object.defineProperty(exports, "acceptRemoteCertificate", {
    get() {
        return __config.getObject<boolean>("acceptRemoteCertificate");
    },
    enumerable: true,
});

export declare const address: string | undefined;
Object.defineProperty(exports, "address", {
    get() {
        return __config.get("address");
    },
    enumerable: true,
});

/**
 * The directory to look for existing LXD configuration. default = $HOME/snap/lxd/common/config:$HOME/.config/lxc
 */
export declare const configDir: string | undefined;
Object.defineProperty(exports, "configDir", {
    get() {
        return __config.get("configDir");
    },
    enumerable: true,
});

export declare const generateClientCertificates: boolean | undefined;
Object.defineProperty(exports, "generateClientCertificates", {
    get() {
        return __config.getObject<boolean>("generateClientCertificates");
    },
    enumerable: true,
});

export declare const lxdRemotes: outputs.config.LxdRemotes[] | undefined;
Object.defineProperty(exports, "lxdRemotes", {
    get() {
        return __config.getObject<outputs.config.LxdRemotes[]>("lxdRemotes");
    },
    enumerable: true,
});

export declare const port: string | undefined;
Object.defineProperty(exports, "port", {
    get() {
        return __config.get("port");
    },
    enumerable: true,
});

/**
 * The project where project-scoped resources will be created. Can be overridden in individual resources. default = default
 */
export declare const project: string | undefined;
Object.defineProperty(exports, "project", {
    get() {
        return __config.get("project");
    },
    enumerable: true,
});

/**
 * How often to poll during state changes (default 10s)
 */
export declare const refreshInterval: string | undefined;
Object.defineProperty(exports, "refreshInterval", {
    get() {
        return __config.get("refreshInterval");
    },
    enumerable: true,
});

export declare const remote: string | undefined;
Object.defineProperty(exports, "remote", {
    get() {
        return __config.get("remote");
    },
    enumerable: true,
});

export declare const remotePassword: string | undefined;
Object.defineProperty(exports, "remotePassword", {
    get() {
        return __config.get("remotePassword");
    },
    enumerable: true,
});

export declare const scheme: string | undefined;
Object.defineProperty(exports, "scheme", {
    get() {
        return __config.get("scheme");
    },
    enumerable: true,
});

