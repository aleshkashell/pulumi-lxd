# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'LxdRemotes',
]

@pulumi.output_type
class LxdRemotes(dict):
    def __init__(__self__, *,
                 name: str,
                 address: Optional[str] = None,
                 default: Optional[bool] = None,
                 password: Optional[str] = None,
                 port: Optional[str] = None,
                 scheme: Optional[str] = None):
        LxdRemotes._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            address=address,
            default=default,
            password=password,
            port=port,
            scheme=scheme,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             address: Optional[str] = None,
             default: Optional[bool] = None,
             password: Optional[str] = None,
             port: Optional[str] = None,
             scheme: Optional[str] = None,
             opts: Optional[pulumi.ResourceOptions]=None,
             **kwargs):

        _setter("name", name)
        if address is not None:
            _setter("address", address)
        if default is not None:
            _setter("default", default)
        if password is not None:
            _setter("password", password)
        if port is not None:
            _setter("port", port)
        if scheme is not None:
            _setter("scheme", scheme)

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def address(self) -> Optional[str]:
        return pulumi.get(self, "address")

    @property
    @pulumi.getter
    def default(self) -> Optional[bool]:
        return pulumi.get(self, "default")

    @property
    @pulumi.getter
    def password(self) -> Optional[str]:
        return pulumi.get(self, "password")

    @property
    @pulumi.getter
    def port(self) -> Optional[str]:
        return pulumi.get(self, "port")

    @property
    @pulumi.getter
    def scheme(self) -> Optional[str]:
        return pulumi.get(self, "scheme")


